include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs circle01 Sample

block content
	h1 複数円(2D)の描画

	mixin list(1)

	script(src="../common/threejs/build/three.min.js")
	script(src="../common/lib/CanvasRenderer.js")
	script(src="../common/lib/Projector.js")
	script.
		var requestAnimationFrame = window.requestAnimationFrame ||
																window.mozRequestAnimationFrame ||
																window.webkitRequestAnimationFrame ||
																window.msRequestAnimationFrame;
		window.requestAnimationFrame = requestAnimationFrame;


		window.addEventListener("DOMContentLoaded", function(){
			var camera,scene,group,particle,renderer;
			var col = 20,
					margin = 80,
					opacity = 0.5,
					flag = "large";

			init();
			animate();

			function init(){
				/*
				 * カメラの準備
				 * THREE.PerspectiveCamra(画角, 画面比, クリッピング手前, クリッピング奥);
				*/
				var width = window.innerWidth,
						height = window.innerHeight,
						fov = 80,
						aspect = width / height,
						near = 1,
						far = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
				camera.position.z = 500;

				var program = function ( context ) {
					var PI2 = Math.PI * 2,
							radius = 10.0,
							reduce = 0.7;

					context.beginPath();
					context.arc( 0, 0, radius, 0, PI2, true );
					context.closePath();
					context.arc( 10, 10, radius * reduce, 0, PI2, true );
					context.closePath();
					context.arc( -10, 10, radius * reduce, 0, PI2, true );
					context.closePath();
					context.fill();
				}

				/*
				 * シーンの作成
				*/
				group = new THREE.Group();
				scene = new THREE.Scene();
				scene.add(group);

				/*
				 * マテリアルの作成
				*/
				for(var i = 0;i < 300 * col;i++){
					var material = new THREE.SpriteCanvasMaterial( {
						color: Math.random() * 0x808008 + 0x808080,
						program: program
					});
					particle = new THREE.Sprite(material);
					particle.position.x = Number("-" + width / 2);
					particle.position.y = height / 2;
					group.add(particle);
				}

				for(var i = 0; i < 300; i++){
					for(var j = 0;j < col;j++){
						if(j % 2 == 0){
							group.children[i*col+j].position.x += i * margin;
						}else{
							group.children[i*col+j].position.x += (i * margin) + (margin / 2);
						}
						group.children[i*col+j].position.y -= j * margin;
						group.children[i*col+j].material.opacity = opacity;
					}
				}
				//- console.log(group.children[1].position.x);
				scene.add( particle );

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.CanvasRenderer();
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( window.innerWidth, window.innerHeight );
				document.body.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}

			function animate(){
				//- cancelAnimationFrame(animate);
				requestAnimationFrame(animate);
				if(group.children[0].scale.x > 3){
					flag = "small";
				}else if(group.children[0].scale.x < 0.1){
					flag = "large";
				}
				render();
			}

			function render(){
				var r = 0.02;
				group.children.map(function(val, i){
					if(flag === "large"){
						val.scale.x += r;
						val.scale.y += r;
					}else{
						val.scale.x -= r;
						val.scale.y -= r;
					}
					return val;
				});
				renderer.render(scene, camera);
			}
		});
