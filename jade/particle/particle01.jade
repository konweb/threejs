include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs particle01 Sample

block content
	h1 パーティクル

	mixin list(1)

	script(src="../common/threejs/build/three.min.js")
	script
		:coffee
			requestAnimationFrame = window.requestAnimationFrame ||
															window.mozRequestAnimationFrame ||
															window.webkitRequestAnimationFrame ||
															window.msRequestAnimationFrame
			window.requestAnimationFrame = requestAnimationFrame
			
			window.addEventListener "DOMContentLoaded", ->
				Webgl.init()

			class Webgl
				@init = ->
					@width = window.innerWidth
					@height = window.innerHeight

					@initCamera()
					@createScene()
					@helper()
					@initMaterial()
					@renderFun()

				###
				 * カメラの設定
				###
				@initCamera = ->
					fov = 45
					aspect = @width / @height
					near = 1
					fav = 1000

					@camera = new THREE.PerspectiveCamera fov, aspect, near, fav
					@camera.position.set 50, 50, 200
					@camera.up.set 0, 0, 1
					@camera.lookAt {x:0, y:0, z: 0}

				###
				 * シーンの作成
				###
				@createScene = ->
					@scene = new THREE.Scene
					@group = new THREE.Group
					@scene.add @group

				###
				 * ヘルパー
				###
				@helper = ->
					axis = new THREE.AxisHelper 200
					axis.position.set 0, 0, 0
					@group.add axis

				###
				 * メッシュの作成
				###
				@initMaterial = ->
					#ジオメトリーの作成
					geometry = new THREE.Geometry

					count = 1000
					colors = []
					for i in [0...count]
						vertex = new THREE.Vector3
						vertex.x = (Math.random() - 0.5)*100
						vertex.y = (Math.random() - 0.5)*100
						vertex.z = (Math.random() - 0.5)*100
						geometry.vertices.push vertex
						color = new THREE.Color(0xFFFFFF);
						color.setHSL(210/360, 1, 0.5);
						colors.push(color);

					geometry.colors = colors
					
					#マテリアルの作成
					texture = THREE.ImageUtils.loadTexture( "/images/particle.png" );
					material = new THREE.PointCloudMaterial
						size: 10,
						vertexColors: true,
						map: texture,
						blending: THREE.AdditiveBlending,
						transparent: true


					particle = new THREE.PointCloud geometry, material
					particle.sortParticles = true
					@group.add particle

				###
				 * レンダラーの作成
				###
				@renderFun = ->
					@renderer = new THREE.WebGLRenderer
					@renderer.setSize @width, @height
					document.body.appendChild @renderer.domElement
					@renderer.render @scene, @camera