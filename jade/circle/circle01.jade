include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs cube01 Sample

block content
	h1 円の描画

	mixin list(1)

	div#canvas

	include ../inc/_script-sets.jade
	script.
		window.addEventListener("DOMContentLoaded", function(){
			var camera,scene,renderer;
			var canvas = document.getElementById("canvas");

			init();

			function init(){
				/*
				 * カメラの設定
				*/
				var width = canvas.clientWidth,
						height = window.innerHeight,
						fov = 45,
						aspect = width / height,
						near = 1,
						fav = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, fav)
				camera.position.set(50, 50, 150)
				camera.up.set(0, 0, 1)
				camera.lookAt({x: 0, y: 0, z: 0});

				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene();

				/*
				 * 軸ヘルパー
				*/
				var axis = new THREE.AxisHelper(100);
				axis.position.set(0, 0, 0);
				scene.add(axis);

				/*
				 * メッシュの作成
				*/
				// ジオメトリーの作成
				geometry = new THREE.SphereGeometry(50, 30, 30, 0);

				// マテリアルの作成
				material = new THREE.MeshNormalMaterial();
				//- {shading: THREE.SmoothShading}

				sphre = new THREE.Mesh(geometry, material);
				scene.add(sphre);

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.WebGLRenderer
				renderer.setSize(width, height);
				canvas.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}
		});

	:markdown
		### 実装
		基本は(ベース)[../index.html]と同じ

		---

		### メッシュ
		```
		/*
		 * メッシュの作成
		*/
		// ジオメトリーの作成
		geometry = new THREE.SphereGeometry(50, 30, 30, 0);

		// マテリアルの作成
		material = new THREE.MeshNormalMaterial();

		sphre = new THREE.Mesh(geometry, material);
		scene.add(sphre);
		```

		> THREE.SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength)  
		> [docs - SphereGeometry](http://threejs.org/docs/#Reference/Extras.Geometries/SphereGeometry)

		> THREE.MeshNormalMaterial(parameters)  
		> [docs - MeshNormalMaterial](http://threejs.org/docs/#Reference/Materials/MeshNormalMaterial)

		---

		### All Codes
		```
		window.addEventListener("DOMContentLoaded", function(){
			var camera,scene,renderer;
			var canvas = document.getElementById("canvas");

			init();

			function init(){
				/*
				 * カメラの設定
				*/
				var width = canvas.clientWidth,
						height = window.innerHeight,
						fov = 45,
						aspect = width / height,
						near = 1,
						fav = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, fav)
				camera.position.set(50, 50, 150)
				camera.up.set(0, 0, 1)
				camera.lookAt({x: 0, y: 0, z: 0});

				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene();

				/*
				 * 軸ヘルパー
				*/
				var axis = new THREE.AxisHelper(100);
				axis.position.set(0, 0, 0);
				scene.add(axis);

				/*
				 * メッシュの作成
				*/
				// ジオメトリーの作成
				geometry = new THREE.SphereGeometry(50, 30, 30, 0);

				// マテリアルの作成
				material = new THREE.MeshNormalMaterial();
				//- {shading: THREE.SmoothShading}

				sphre = new THREE.Mesh(geometry, material);
				scene.add(sphre);

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.WebGLRenderer
				renderer.setSize(width, height);
				canvas.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}
		});
		```