include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs cube01 Sample

block content
	h1 キューブを複数描画

	mixin list(1)

	script(src="../common/threejs/build/three.min.js")
	script.
		window.addEventListener("DOMContentLoaded", function(){
			/* カメラを用意
			 * THREE.PerspectiveCamera(画角, 縦横比, クリッピング手前, クリッピング奥);
			 * クリッピング手前からクリッピング奥までが描画される
			*/
			var width = window.innerWidth,
					height = window.innerHeight,
					fov = 80,
					aspect = width / height,
					near = 80,
					far = 1000,
					camera = new THREE.PerspectiveCamera(fov, aspect, near, far);

			// z方向に500ずらす
			camera.position.z = 500;


			/*
			 * シーンの準備
			 * シーンは空間
			 * ここにオブジェクトを詰め込んでいく
			*/
			var scene = new THREE.Scene();


			/*
			 * メッシュの作成
			 * メッシュはポリゴンの集合で作られたオブジェクト
			 * メッシュはジオメトリ(座標)とマテリアル(素材)で構成される
			*/

			// ジオメトリの作成
			// THREE.CubeGeometry(横幅, 高さ, (横の分割数, 縦の分割数, 奥行きの文化かつ数, 表面, sides));
			var geometry = new THREE.CubeGeometry(200, 200 ,200);

			// マテリアルの作成
			// THREE.MeshLambertMaterial({object});
			var material = new THREE.MeshLambertMaterial({color: 0x660000});

			// メッシュの作成
			var cubeMesh = new THREE.Mesh(geometry, material);
			cubeMesh.rotation.x = 10;
			cubeMesh.rotation.y = 10;


			/*
			 * メッシュをシーンに追加
			*/
			scene.add(cubeMesh);


			/*
			 * 光源の作成
			*/
			var directionalLight = new THREE.DirectionalLight(0xffffff, 3);
			directionalLight.position.z = 3;


			/*
			 * 光源をシーンに追加
			*/
			scene.add(directionalLight);


			/*
			 * レンダラーの用意
			 * 描画を行う準備
			*/
			var renderer = new THREE.WebGLRenderer();

			// 大きさの定義
			// レンダラー.setSize(横幅, 高さ);
			renderer.setSize(width, height);

			// DOMにcanvasを追加
			document.body.appendChild(renderer.domElement);

			console.log(cubeMesh);
			cubeMesh.rotation.x = 30;
			//- cubeMesh.geometry.parameters.width = 30;
			//- cubeMesh.geometry.parameters.height = 30;
			/*
			 * レンダリング
			 * 描画処理
			*/
			renderer.render(scene, camera);
		});
