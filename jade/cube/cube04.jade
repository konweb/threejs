include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs cube04 Sample

block content
	h1 キューブを複数描画

	mixin list(1)

	div#canvas

	include ../inc/_script-sets.jade
	script.
		requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
		window.requestAnimationFrame = requestAnimationFrame;

		window.addEventListener("DOMContentLoaded", function() {
			var camera,scene,renderer;

			init();
			animation();

			function init(){
				var canvas = document.getElementById("canvas");

				/*
					 * カメラの設定
				 */
				var width = canvas.clientWidth,
						height = window.innerHeight,
						fov = 45,
						aspect = width / height;
						near = 1;
						fav = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, fav);
				camera.position.set(50, 50, 150);
				camera.up.set(0, 0, 1);
				camera.lookAt({x: 0,y: 0,z: 0});

				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene;
				//- group = new THREE.Group;

				var directionalLight = new THREE.DirectionalLight(0xffffff, 3);
				directionalLight.position.z = 3;
				scene.add(directionalLight);

				/*
				 * メッシュの作成
				*/
				var boxsize, geometry, material, cube, i, material, num, span;
				num = 1000;
				span = 60;
				for (i = 0;i < num;i++) {
					boxsize = Math.random() * 3;
					geometry = new THREE.BoxGeometry(boxsize, boxsize, boxsize);
					material = new THREE.MeshLambertMaterial({color: 0x660000});
					cube = new THREE.Mesh(geometry, material);
					cube.position.x = Math.random() * span - span / 2;
					cube.position.y = Math.random() * span - span / 2;
					cube.position.z = Math.random() * span - span / 2;
					scene.add(cube);
				}

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.WebGLRenderer;
				renderer.setSize(width, height);
				canvas.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}

			function animation(){
				requestAnimationFrame(animation);
				camera.rotation.z += 0.002;
				renderer.render(scene, camera);
			}
		});

	:markdown
		### 実装

