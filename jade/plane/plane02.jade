include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs Plane Sample02

block content
	h1 地面にテクスチャを適用
	
	mixin list(1)

	div#canvas

	include ../inc/_script-sets.jade
	script.
		window.addEventListener("DOMContentLoaded", function(){
			init();

			function init(){
				var camera,scene,renderer,
				canvas = document.getElementById("canvas");

				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene();
				scene.fog = new THREE.FogExp2( 0xABABAB, 0.008 );// ぼかす

				/*
				 * カメラの設定
				*/
				var width = canvas.clientWidth,
						height = window.innerHeight,
						fov = 45,
						aspect = width / height,
						near = 1,
						far = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
				camera.position.set(0, 10, 100);

				/*
				 * メッシュの作成
				*/
				// ジオメトリーの作成
				var geometry,map1,material,mesh;
				geometry = new THREE.PlaneGeometry(200, 200, 64, 64);

				// 画像を読み込み 画像が読み込まれる前に描画されている？ため上手く読み込めない。renderer.render()を走らせる
				map1 = THREE.ImageUtils.loadTexture("plane02.png", {}, function() {renderer.render(scene, camera);});
				material = new THREE.MeshBasicMaterial({map: map1});// マテリアルの作成
				mesh = new THREE.Mesh(geometry, material);
				mesh.rotation.x = Math.PI / -2;// x軸を90度回転
				scene.add(mesh);

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.WebGLRenderer();
				renderer.setSize(width, height);
				renderer.setClearColor(0xABABAB);
				canvas.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}
		});

	:markdown
		### メッシュ
		#### 地面の作成
		##### PlaneGeometry(width, height, widthSegments, heightSegments);
		(docs - PlaneGeometry)[http://threejs.org/docs/#Reference/Extras.Geometries/PlaneGeometry]  
		
		#### 画像の読み込み
		##### Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy )
		(docs - Texture)[http://threejs.org/docs/#Reference/Textures/Texture]  

		```
		// ジオメトリーの作成
		var geometry,map1,material,mesh;
		geometry = new THREE.PlaneGeometry(200, 200, 64, 64);

		// 画像を読み込み 画像が読み込まれる前に描画されている？ため上手く読み込めない。renderer.render()を走らせる
		map1 = THREE.ImageUtils.loadTexture("plane02.png", {}, function() {renderer.render(scene, camera);});
		material = new THREE.MeshBasicMaterial({map: map1});// マテリアルの作成
		mesh = new THREE.Mesh(geometry, material);
		mesh.rotation.x = Math.PI / -2;// x軸を90度回転
		scene.add(mesh);
		```

		---

		### 遠くをぼかす
		##### FogExp2( hex, density)
		[docs - FogExp2](http://threejs.org/docs/#Reference/Scenes/FogExp2)  

		```
		scene.fog = new THREE.FogExp2( 0xABABAB, 0.008 );// ぼかす
		```

		---

		### All Codes
		```
		window.addEventListener("DOMContentLoaded", function(){
			init();

			function init(){
				var camera,scene,renderer,
				canvas = document.getElementById("canvas");

				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene();
				scene.fog = new THREE.FogExp2( 0xABABAB, 0.008 );// ぼかす

				/*
				 * カメラの設定
				*/
				var width = canvas.clientWidth,
						height = window.innerHeight,
						fov = 45,
						aspect = width / height,
						near = 1,
						far = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
				camera.position.set(0, 10, 100);

				/*
				 * メッシュの作成
				*/
				// ジオメトリーの作成
				var geometry,map1,material,mesh;
				geometry = new THREE.PlaneGeometry(200, 200, 64, 64);

				// 画像を読み込み 画像が読み込まれる前に描画されている？ため上手く読み込めない。renderer.render()を走らせる
				map1 = THREE.ImageUtils.loadTexture("plane02.png", {}, function() {renderer.render(scene, camera);});
				material = new THREE.MeshBasicMaterial({map: map1});// マテリアルの作成
				mesh = new THREE.Mesh(geometry, material);
				mesh.rotation.x = Math.PI / -2;// x軸を90度回転
				scene.add(mesh);

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.WebGLRenderer();
				renderer.setSize(width, height);
				renderer.setClearColor(0xABABAB);
				canvas.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}
		});
		```
