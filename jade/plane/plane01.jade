include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs Plane Sample01

block content
	h1 地面の作成
	
	mixin list(1)

	div#canvas

	include ../inc/_script-sets.jade
	script.
		window.addEventListener("DOMContentLoaded", function(){
			init();

			function init(){
				var camera,scene,renderer;
				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene();

				/*
				 * カメラの設定
				*/
				var width = document.body.clientWidth,
						height = window.innerHeight,
						fov = 45,
						aspect = width / height,
						near = 1,
						far = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
				camera.position.set(50, 50, 200);
				camera.up = new THREE.Vector3(0, 0, 1);
				camera.lookAt(new THREE.Vector3(0,0,0));

				/*
				 * 軸ヘルパー
				*/
				var axis = new THREE.AxisHelper(100);
				axis.position.set(0, 0, 0);
				scene.add(axis);

				/*
				 * メッシュの作成
				*/
				// ジオメトリーの作成
				var geometry = new THREE.PlaneGeometry(100, 100);

				// マテリアルの作成
				var material = new THREE.MeshBasicMaterial({color: 0xffffff});
				var mesh = new THREE.Mesh(geometry, material);
				scene.add(mesh);

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.WebGLRenderer();
				renderer.setSize(width, height);
				var dom = document.getElementById("canvas");
				dom.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}
		});

	:markdown
		### メッシュ
		#### 地面の作成
		##### PlaneGeometry(width, height, widthSegments, heightSegments);
		(docs - PlaneGeometry)[http://threejs.org/docs/#Reference/Extras.Geometries/PlaneGeometry]  

		```
		// ジオメトリーの作成
		var geometry = new THREE.PlaneGeometry(100, 100);

		// マテリアルの作成
		var material = new THREE.MeshBasicMaterial({color: 0xffffff});
		var mesh = new THREE.Mesh(geometry, material);
		scene.add(mesh);
		```

		---

		### All Codes
		```
		window.addEventListener("DOMContentLoaded", function(){
			init();

			function init(){
				var camera,scene,renderer;
				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene();

				/*
				 * カメラの設定
				*/
				var width = document.body.clientWidth,
						height = window.innerHeight,
						fov = 45,
						aspect = width / height,
						near = 1,
						far = 1000;

				camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
				camera.position.set(50, 50, 200);
				camera.up = new THREE.Vector3(0, 0, 1);
				camera.lookAt(new THREE.Vector3(0,0,0));

				/*
				 * 軸ヘルパー
				*/
				var axis = new THREE.AxisHelper(100);
				axis.position.set(0, 0, 0);
				scene.add(axis);

				/*
				 * メッシュの作成
				*/
				// ジオメトリーの作成
				var geometry = new THREE.PlaneGeometry(100, 100);

				// マテリアルの作成
				var material = new THREE.MeshBasicMaterial({color: 0xffffff});
				var mesh = new THREE.Mesh(geometry, material);
				scene.add(mesh);

				/*
				 * レンダラーの作成
				*/
				renderer = new THREE.WebGLRenderer();
				renderer.setSize(width, height);
				var dom = document.getElementById("canvas");
				dom.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}
		});
		```
