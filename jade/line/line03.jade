include ./../inc/_nav-list.jade
extends ../inc/_head.jade

block title
	title Threejs line03 Sample

block content
	h1 ラインをランダムに配置

	mixin list(1)

	include ../inc/_script-sets.jade
	script.
		var requestAnimationFrame = window.requestAnimationFrame ||
																window.mozRequestAnimationFrame ||
																window.webkitRequestAnimationFrame ||
																window.msRequestAnimationFrame;
		window.requestAnimationFrame = requestAnimationFrame;

		window.addEventListener("DOMContentLoaded", function(){
			var camera,scene,line,renderer;

			init();
			anime();

			function init(){
				/*
				 * カメラを準備
				 * THREE.PerspectiveCamera(画角, 縦横比, クリッピング手前, クリッピング奥);
				*/
				var width    = document.body.clientWidth,
						height   = window.innerHeight,
						fov      = 80,
						aspect   = width / height,
						near     = 1,
						fav      = 1000;

				camera  = new THREE.PerspectiveCamera(fov, aspect, near, fav);
				camera.position.z = 500;

				/*
				 * シーンの作成
				*/
				scene = new THREE.Scene();
				scene.fog = new THREE.FogExp2(0x000000, 0.003);

				/*
				 * マテリアルの作成
				*/
				var num = 400,
						geometry = new THREE.BufferGeometry(),
						material = new THREE.LineBasicMaterial({color: 0x0000ff}),
						positions = new Float32Array(num * 3);

				for(var i = 0; i < 1000;i++){
					var x = Math.random() * num - num / 2,
							y = Math.random() * num - num / 2,
							z = Math.random() * num - num / 2;

					positions[i * 3] = x;
					positions[i * 3 + 1] = y;
					positions[i * 3 + 2] = z;

				}
				//- geometry.vertices.push(
				//- 	new THREE.Vector3(x, y, z),
				//- 	new THREE.Vector3(x * 0.002, y * 0.002, z * 0.002)
				//- );

				geometry.addAttribute("position", new THREE.BufferAttribute(positions, 3));
				geometry.computeBoundingSphere();

				line = new THREE.Line(geometry, material);
				scene.add(line);

				renderer = new THREE.WebGLRenderer();
				renderer.setSize(width, height);
				document.body.appendChild(renderer.domElement);
				renderer.render(scene, camera);
			}

			function anime(){
				requestAnimationFrame(anime);
				render();
			}
			function render(){
				var time = Date.now() * 0.002;
				line.rotation.x = time * 0.01;
				line.rotation.y = time * 0.05;
				line.rotation.z = time * 0.03;
				renderer.render(scene, camera)
			}
		});